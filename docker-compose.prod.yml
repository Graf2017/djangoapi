version: "3"

services:

  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
#    ports:
#      - "8000:8000"
    expose: # тільки в докері порт працює
      - "8000"
    command: gunicorn --bind 0.0.0.0:8000 api_webstore_core.wsgi:application --chdir api_webstore/
    env_file:
      .env.prod # ./.env.dev analog
    volumes:
      - ./api_webstore/staticfiles:/usr/src/django_project/api_webstore/staticfiles # і в nginx і в app доступ до одного volume
#    volumes:
#      - .:/api_webstore # всі дані з поточного каталогу на моєму компі будуть монтуватися в контейнер. це будуть спільні дані. відкрити доступ контейнера до цих даних та змінювати їх
#      - /app/modules
    depends_on:
      - db_postgresql

  db_postgresql:
    container_name: database_for_app
    image: postgres
    expose:
      - "5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: api_webstore_db
    volumes:
      - db_data:/var/lib/postgresql/data # те що на хості:те що в контейнері

  nginx:
    build: ./nginx
    restart: unless-stopped
    ports:
      - '127.127.127.127:1317:80'
    depends_on:
      - app
    volumes:
      - ./api_webstore/staticfiles:/usr/src/django_project/api_webstore/staticfiles # volumes буде називатися staticfiles
#      - staticfiles:/usr/src/api_webstore/staticfiles

volumes: # які томи можна використати в цьому проекті. якщо тут не вказувати томи написані вище, то вони del щоразу при запускі контейнера
  db_data:
  nginx: